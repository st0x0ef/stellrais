plugins {
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    id "architectury-plugin" version "3.4.160"
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"

}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'me.modmuss50.mod-publish-plugin'

    base {
        archivesName = "${rootProject.modid}-${rootProject.minecraft_version}-${project.name}"
    }

    def modLoader = project.name
    boolean isCommon = modLoader == "common"


    repositories {
        maven { url "https://maven.shedaniel.me" }
        maven { url "https://cursemaven.com" }
        maven { url "https://maven.terraformersmc.com/releases" }
        maven { url "https://maven.parchmentmc.org" }
        maven { url "https://maven.neoforged.net/releases" }
        maven { url "https://maven.blamejared.com/" }
        maven { url "https://maven.saps.dev/releases" }
        maven {
            name "odysseyusMaven"
            url "https://maven.odysseyus.fr/releases"
        }

        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.parchment_mapping_version}@zip")
        }

        modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}"
        modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${rootProject.rei_version}"
        modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId "com.st0x0ef.stellaris"
                artifactId "stellaris-$modLoader-" + minecraft_version
                version project.version
                from components.java
                pom {
                    name = "Stellaris" + modLoader.capitalize()
                    url = "https://github.com/s0x0ef/Stellaris"
                }
            }
        }

        repositories {
            maven {
                url = "https://maven.exodusstudio.org/snapshots/"
                credentials {
                    username = System.getenv("MAVEN_USER")
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }

    if (!isCommon) {
        publishMods {
            file = file("../${modLoader.capitalize()}/build/libs/stellaris-${minecraft_version}-${modLoader}-${mod_version}.jar")
            changelog = file("../changelog.md").getText('UTF-8')
            type = STABLE
            modLoaders.add(modLoader)
            displayName = "[${modLoader.capitalize()} ${minecraft_version}] Stellaris ${mod_version}"

            curseforge {
                projectId = "1036270"
                projectSlug = "stellaris" // Required for discord webhook
                accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
                minecraftVersions.add("${minecraft_version}")
                minecraftVersions.add("${supported_minecraft_version}")
                javaVersions.add(JavaVersion.VERSION_21)
                requires("architectury-api")
                embeds("sky-aesthetics")
            }

            modrinth {
                projectId = "ItTQpuBn"
                accessToken = providers.environmentVariable("MODRINTH_TOKEN")
                minecraftVersions.add("${minecraft_version}")
                minecraftVersions.add("${supported_minecraft_version}")
                requires("architectury-api")
                embeds("sky-aesthetics")

            }
        }
    }
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}
